import { View, Text, StyleSheet, TouchableOpacity } from 'react-native'
import React, { useEffect, useState } from 'react'

const RenderUserTimes = ({ item, firstItem, handleReady,timerOn }) => {

    const [startTimer, setStartTimer] = useState(false)
    const [totalSeconds, setTotalSeconds] = useState(0);


    useEffect(() => {
        if (item.id === firstItem.id) {
            console.log('true 12 line render user times')
            setStartTimer(true)
        } else if (item.totalSeconds === firstItem.totalSeconds){
            setStartTimer(true)
        }
    }, [item])

    useEffect(() => {
        setTotalSeconds(item.totalSeconds)
        
      }, [])
    
      useEffect(() => {
        let interval;
    
        if (totalSeconds >= firstItem.totalSeconds&& startTimer) {
            console.log('true 28 line render user times', totalSeconds)
          interval = setInterval(() => {
            setTotalSeconds(totalSeconds => totalSeconds - 1);
          }, 1000)
        } else {
          clearInterval(interval)
        }
    
        return () => clearInterval(interval)
      }, [startTimer, totalSeconds, timerOn])

    return <View style={styles.itemContainer}>
        <Text style={styles.userName}>{item.name}</Text>
        <Text style={styles.userTime}>
            {`${Math.floor(totalSeconds / 60)
                .toString()
                .padStart(2, '0')}:${(totalSeconds % 60)
                    .toString()
                    .padStart(2, '0')}`}
        </Text>
        <TouchableOpacity
            style={[styles.readyButton, { backgroundColor: item.ready ? 'green' : '#007bff' }]}
            onPress={() => handleReady(item.id)}
        >
            <Text style={styles.readyButtonText}>{item.ready ? 'Ready' : 'Not Ready'}</Text>
        </TouchableOpacity>
    </View>

}


const styles = StyleSheet.create({
    itemContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        marginBottom: 20,
        backgroundColor: '#f9f9f9',
        borderRadius: 15,
        width: '95%',
        paddingVertical: 15,
        paddingHorizontal: 20,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 3.84,
        elevation: 3,
    },
    userName: {
        fontSize: 18,
        color: '#4a4a4a',
        maxWidth: '50%',
    },
    userTime: {
        fontSize: 18,
        fontWeight: 'bold',
        color: '#007bff',
    },
    readyButton: {
        backgroundColor: '#32CD32',
        paddingVertical: 8,
        paddingHorizontal: 16,
        borderRadius: 20,
        elevation: 2,
    },
    readyButtonText: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: '500',
    },
    startButton: {
        backgroundColor: '#ff4500',
        paddingVertical: 12,
        paddingHorizontal: 30,
        borderRadius: 30,
        marginTop: 20,
        elevation: 4,
    },
    startButtonText: {
        color: '#ffffff',
        fontSize: 20,
        fontWeight: '600',
    },
});


export default RenderUserTimes